plugins {
    id 'java'
    id 'maven'
    id "org.jetbrains.kotlin.jvm" version "1.1.3-2"
}

apply from: 'version.gradle'

ext {
    sl4jVersion = '1.7.24'
    javacvVersion = '1.3.2'
    kotlinVersion = '1.1.3-2'
}

allprojects {

    group = 'com.gitlab.daring.sandbox'
    version = isbVersion
    buildDir = 'target'

    compileJava.options.encoding = 'UTF-8'

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
        compile "org.slf4j:slf4j-api:$sl4jVersion"
        compile "org.slf4j:log4j-over-slf4j:$sl4jVersion"
        compile "ch.qos.logback:logback-classic:1.2.1"
        compile "org.apache.commons:commons-lang3:3.5"
        compile "com.google.guava:guava:21.0"
        compile "commons-io:commons-io:2.5"
        compile "com.typesafe:config:1.3.1"
        compile "com.google.code.findbugs:jsr305:3.0.1"
//		compile "org.bytedeco:javacv-platform:$javacvVersion"
        compile "org.bytedeco:javacv:$javacvVersion"
        compile "org.bytedeco.javacpp-presets:opencv:$javacvVersion :windows-x86_64"
        compile "org.bytedeco.javacpp-presets:opencv:$javacvVersion:linux-x86_64"
        compile "com.miglayout:miglayout-swing:5.0"
        testCompile "junit:junit:4.12"
        testCompile "org.mockito:mockito-core:2.7.12"
    }

    task copyDeps(type: Sync, dependsOn: build) {
        from(configurations.compile, jar)
        into "distrib/lib"
    }

    task buildDistrib(type: Zip, dependsOn: copyDeps) {
        from('distrib/image-sandbox') { fileMode = 0755 }
        from('distrib') { duplicatesStrategy 'exclude' }
        into 'image-sandbox'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

apply from: 'private.gradle'
